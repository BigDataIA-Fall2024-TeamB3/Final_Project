name: Deploy to GCP and Run Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GCP_SSH_KEY }}" > ~/.ssh/gcp_key
        chmod 600 ~/.ssh/gcp_key

    - name: Cleanup old deployment
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/gcp_key ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_INSTANCE_IP }} << 'EOF'
          sudo docker rm streamlit_container fastapi_container || true
          sudo docker rmi final_project-streamlit final_project-fastapi || true
          rm -rf ~/final_project
        EOF

    - name: Create folder and .env file on GCP instance
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/gcp_key ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_INSTANCE_IP }} << 'EOF'
          mkdir -p /home/${{ secrets.GCP_SSH_USER }}/final_project
          cat > /home/${{ secrets.GCP_SSH_USER }}/final_project/.env << 'EOT'
          API_URL=${{ secrets.API_URL }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ALGORITHM=${{ secrets.ALGORITHM }}
          ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

          SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_USER_PROFILES_DB=${{ secrets.SNOWFLAKE_USER_PROFILES_DB }}
          SNOWFLAKE_JOBSDB=${{ secrets.SNOWFLAKE_JOBSDB }}
          SNOWFLAKE_SCHEMA=${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE=${{ secrets.SNOWFLAKE_WAREHOUSE }}

          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          EOT
        EOF

    - name: Copy repository files to GCP instance
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/gcp_key -r ./* ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_INSTANCE_IP }}:/home/${{ secrets.GCP_SSH_USER }}/final_project/

    - name: Run Docker Compose on GCP
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/gcp_key ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_INSTANCE_IP }} << 'EOF'
          cd /home/${{ secrets.GCP_SSH_USER }}/final_project
          sudo docker-compose down
          sudo docker-compose build --no-cache
          sudo docker-compose up -d
        EOF